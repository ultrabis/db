//import { UltraEnum, itemSuffixTypeFromText, itemBaseName } from '../src/common'

import * as common from '../src/common'

import Buff from '../src/enum/Buff'
import ItemSuffixType from '../src/enum/ItemSuffixType'

console.log(`[UltraEnum] numeric append`)
console.log(`==========================`)
let buffEnum = new common.UltraEnum(Buff)
buffEnum.append(Buff.ArcaneBrilliance)
buffEnum.append(Buff.BlessingOfKings)  
console.log(`bitMask: ${buffEnum.bitMask}`)
console.log(`values: ${buffEnum.values}`)
console.log(`keys: ${buffEnum.keys}`)
console.log(``)

console.log(`[UltraEnum] fuzzy string append`)
console.log(`==========================`)
buffEnum = new common.UltraEnum(Buff)
buffEnum.append('aRCANE bRILLIANCE')
buffEnum.append('bLESSING oF kINGS')
console.log(`bitMask: ${buffEnum.bitMask}`)
console.log(`values: ${buffEnum.values}`)
console.log(`keys: ${buffEnum.keys}`)
console.log(``)

console.log(`[UltraEnum] numeric extend`)
console.log(`==========================`)
buffEnum = new common.UltraEnum(Buff)
buffEnum.extend([Buff.ArcaneBrilliance, Buff.BlessingOfKings])
console.log(`bitMask: ${buffEnum.bitMask}`)
console.log(`values: ${buffEnum.values}`)
console.log(`keys: ${buffEnum.keys}`)
console.log(``)

console.log(`[UltraEnum] fuzzy string extend`)
console.log(`==========================`)
buffEnum = new common.UltraEnum(Buff)
buffEnum.extend(['aRCANE bRILLIANCE', 'bLESSING oF kINGS'])
console.log(`bitMask: ${buffEnum.bitMask}`)
console.log(`values: ${buffEnum.values}`)
console.log(`keys: ${buffEnum.keys}`)
console.log(``)

console.log(`[UltraEnum] with initial bitmask`)
console.log(`==========================`)
buffEnum = new common.UltraEnum(Buff, BigInt(384))
console.log(`bitMask: ${buffEnum.bitMask}`)
console.log(`values: ${buffEnum.values}`)
console.log(`keys: ${buffEnum.keys}`)
console.log(``)

console.log(`[UltraEnum] bigint`)
console.log(`==========================`)
let itemSuffixTypeEnum = new common.UltraEnum(ItemSuffixType)
itemSuffixTypeEnum.extend([ItemSuffixType.TheBear, ItemSuffixType.TheBoar])
console.log(`bitMask: ${itemSuffixTypeEnum.bitMask}`)
console.log(`values: ${itemSuffixTypeEnum.values}`)
console.log(`keys: ${itemSuffixTypeEnum.keys}`)
console.log(``)

console.log(`[UltraEnum] bigint with initial bitmask`)
console.log(`==========================`)
itemSuffixTypeEnum = new common.UltraEnum(ItemSuffixType, BigInt(25769803776))
console.log(`bitMask: ${itemSuffixTypeEnum.bitMask}`)
console.log(`values: ${itemSuffixTypeEnum.values}`)
console.log(`keys: ${itemSuffixTypeEnum.keys}`)
console.log(``)

console.log(`[UltraEnum] with duplicates`)
console.log(`==========================`)
itemSuffixTypeEnum = new common.UltraEnum(ItemSuffixType, BigInt(25769803776))
itemSuffixTypeEnum.extend([ItemSuffixType.TheBear, ItemSuffixType.TheBoar])
itemSuffixTypeEnum.extend([ItemSuffixType.TheBear, ItemSuffixType.TheBoar])
itemSuffixTypeEnum.extend([ItemSuffixType.TheBear, ItemSuffixType.TheBoar])
console.log(`bitMask: ${itemSuffixTypeEnum.bitMask}`)
console.log(`values: ${itemSuffixTypeEnum.values}`)
console.log(`keys: ${itemSuffixTypeEnum.keys}`)
console.log(``)

console.log(`[itemSuffixTypeFromText] cape of arcane wrath`)
console.log(`=============================================`)
console.log(common.itemSuffixTypeFromText('cape of arcane wrath'))
console.log(``)

console.log(`[itemSuffixTypeFromText] Talisman of Ephemeral Power`)
console.log(`=====================================================`)
console.log(common.itemSuffixTypeFromText('Talisman of Ephemeral Power'))
console.log(``)

console.log(`[itemBaseName] Master's Hat of Arcane Wrath`)
console.log(`===========================================`)
console.log(common.itemBaseName(`Master's Hat of Arcane Wrath`))
console.log(``)
